Traceback (most recent call last):
  File "C:\Users\Shaun\AppData\Local\Programs\Python\Python310\lib\runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "C:\Users\Shaun\AppData\Local\Programs\Python\Python310\lib\runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "C:\Users\Shaun\AppData\Local\Programs\Python\Python310\Scripts\yolo.exe\__main__.py", line 7, in <module>
  File "C:\Users\Shaun\AppData\Local\Programs\Python\Python310\lib\site-packages\ultralytics\cfg\__init__.py", line 382, in entrypoint
    check_dict_alignment(full_args_dict, {a: ''})
  File "C:\Users\Shaun\AppData\Local\Programs\Python\Python310\lib\site-packages\ultralytics\cfg\__init__.py", line 203, in check_dict_alignment
    raise SyntaxError(string + CLI_HELP_MSG) from e
SyntaxError: '[31m[1m2024\inHomeGen\inhomegen_project\inhome_app\static\inhome_app\generatedimg\dream_v10_20240201-093951.png[0m' is not a valid YOLO argument. 

    Arguments received: ['yolo', 'task=detect', 'mode=predict', 'model=yolov8n.pt', 'conf=0.25', 'source=C:\\Users\\Shaun\\Desktop\\Hackathons\\TSEC', '2024\\inHomeGen\\inhomegen_project\\inhome_app\\static\\inhome_app\\generatedimg\\dream_v10_20240201-093951.png', 'save=True']. Ultralytics 'yolo' commands use the following syntax:

        yolo TASK MODE ARGS

        Where   TASK (optional) is one of ('detect', 'segment', 'classify', 'pose')
                MODE (required) is one of ('train', 'val', 'predict', 'export', 'track', 'benchmark')
                ARGS (optional) are any number of custom 'arg=value' pairs like 'imgsz=320' that override defaults.
                    See all ARGS at https://docs.ultralytics.com/usage/cfg or with 'yolo cfg'

    1. Train a detection model for 10 epochs with an initial learning_rate of 0.01
        yolo train data=coco128.yaml model=yolov8n.pt epochs=10 lr0=0.01

    2. Predict a YouTube video using a pretrained segmentation model at image size 320:
        yolo predict model=yolov8n-seg.pt source='https://youtu.be/LNwODJXcvt4' imgsz=320

    3. Val a pretrained detection model at batch-size 1 and image size 640:
        yolo val model=yolov8n.pt data=coco128.yaml batch=1 imgsz=640

    4. Export a YOLOv8n classification model to ONNX format at image size 224 by 128 (no TASK required)
        yolo export model=yolov8n-cls.pt format=onnx imgsz=224,128

    5. Run special commands:
        yolo help
        yolo checks
        yolo version
        yolo settings
        yolo copy-cfg
        yolo cfg

    Docs: https://docs.ultralytics.com
    Community: https://community.ultralytics.com
    GitHub: https://github.com/ultralytics/ultralytics
    
